【動作環境】
下記環境にて動作確認を実施しました。

　CentOS5.5
　apache 2.2.3
  PHP 5.1.6
  MySQL 5.0

【導入手順】
①下記モジュールが未導入の場合はインストールして下さい。
# rpm -qa | grep php
php-pear-1.4.9-6.el5
php-common-5.1.6-27.el5
php-cli-5.1.6-27.el5
php-pdo-5.1.6-27.el5
php-mysql-5.1.6-27.el5
php-gd-5.1.6-27.el5
php-5.1.6-27.el5
php-mbstring-5.1.6-27.el5
php-devel-5.1.6-27.el5

# rpm -qa | grep mysql
php-mysql-5.1.6-27.el5
mysql-server-5.0.77-4.el5_4.2
mysql-5.0.77-4.el5_4.2

# rpm -qa | grep httpd
httpd-2.2.3-43.el5.centos

# yum install <rpm名>

※CentOS5.5標準インストールであれば"yum install php php-mysql php-pear php-mbstring"を実施。


②MySQLの設定
# mysql -u root -p
mysql> create database <DB名>;
mysql> GRANT ALL PRIVILEGES ON <DB名>.* to <ユーザ名>@localhost identified by '<パスワード>';
mysql> flush privileges;

作成したDBに接続できるのを確認する。
# mysql -u <ユーザ名> -p<パスワード> <DB名>

作成したDBで以下のcreate文を実行する。
=================================================
CREATE TABLE cake_sessions (
  id varchar(255) NOT NULL default '',
  data text,
  expires int(11) default NULL,
  PRIMARY KEY  (id)
);

CREATE TABLE users (
id              integer auto_increment,
username        varchar(50),
password        varchar(50),
authority               int,
hive_host       varchar(50),
hive_port       int,
created         datetime default null,
modified        datetime default null,
PRIMARY KEY (id)
);

CREATE TABLE hiveqls (
id              integer auto_increment,
title           varchar(256),
query           varchar(2048),
created         datetime default null,
modified        datetime default null,
PRIMARY KEY (id)
);

=================================================

③Apacheの設定
# vi httpd.conf
    AllowOverride All		<==/var/www/htmlディレクティブの設定を変更(.htaccessを読み込める設定が必要）
# /etc/init.d/httpd restart


④WebHiveの導入
(1)WebHiveパッケージダウンロード
https://github.com/recruitcojp/WebHive/

(2)WebHiveインストール
# cd /var/www/html
# tar zxvf recruitcojp-WebHive-f711e9f.tar.gz
# mv recruitcojp-WebHive-f711e9f WebHive
# chown -R apache:apache WebHive

(3)WebHiveの設定
# cd /var/www/html/WebHive/app/config
# vi database.php
環境に合わせてmysqlのDB名、ユーザ名、パスワードを変更する。
        var $default = array(
                'driver' => 'mysql',
                'persistent' => false,
                'host' => 'localhost',
                'login' => 'ユーザ名',
                'password' => 'パスワード',
                'database' => 'DB名',
                'prefix' => '',
        );


# vi app.php
環境に合わせて設定を変更する。

(4)ディレクトリ設定
# mkdir /mnt/WebHive
# mkdir /mnt/WebHive/request
# mkdir /mnt/WebHive/result
# chown -R www-data:www-data /mnt/WebHive
# cd /var/www/WebHive
# ln -s /mnt/WebHive/request
# ln -s /mnt/WebHive/result
# cd /var/www/WebHive/app/webroot
# ln -s /mnt/WebHive/result


⑤ブラウザよりユーザ登録を行う。
http://xxxxxxxxxx/WebHive/users/add

　Authority：１=全権限あり、2=参照専用ユーザ、3=登録HiveQLのみ実行可能
　hive_host：hive serverの接続先サーバを指定
　hive_port：hive serverの接続先ポートを指定

　ユーザ登録後に「http://xxxxxxxxxx/WebHive」へアクセスして登録したユーザでログインできるのを確認する。
　※初回ユーザ登録後は管理者以外でユーザ管理画面を表示できなようにapp.confのUSER_ADMINパラメータを1にして下さい。


⑥クーロン設定
HiveQLリクエストファイル、処理結果ファイルのパージ設定を行う。

# crontab -e
3 * * * * /var/www/html/WebHive/app/modules/log_delete.sh > /var/www/html/WebHive/app/modules/log_delete.out 2>&1
※毎時３分にログパージスクリプトを起動する。

⑦ログローテーション設定
cakePHPログのローテーション設定を行う。

# vi /etc/logrotate.d/cakephp
/var/www/html/WebHive/app/tmp/logs/*.log {
    daily
    rotate 7
    missingok
    notifempty
}

